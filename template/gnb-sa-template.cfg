/* NR SA 2CC FDD or TDD cell */

#define NR_LONG_PUCCH_FORMAT 2  // Values: 2, 3, 4

{
  //log_options: "all.level=debug,all.max_size=1",
  log_options: "all.level={{.LogOption}},all.max_size=1,nas.level={{.Log_Setting.NAS}},nas.max_size=1,ngap.level={{.Log_Setting.NGAP}},ngap.max_size=1,xnap.level={{.Log_Setting.XNAP}},xnap.max_size=1,rrc.level={{.Log_Setting.RRC}},rrc.max_size=1,pdcp.level={{.Log_Setting.PDCP}},pdcp.max_size=1,rlc.level={{.Log_Setting.RLC}},rlc.max_size=1,mac.level={{.Log_Setting.MAC}},mac.max_size=1,phy.level={{.Log_Setting.PHY}},phy.max_size=1",

  log_filename: "/tmp/gnb0.log",

  /* Enable remote API and Web interface */
  com_addr: "[::]:9001",

  rf_driver: {
        name: "sdr",

        /* list of devices. 'dev0' is always the master. */
        // args: "dev0=/dev/sdr0,dev1=/dev/sdr1,dev2=/dev/sdr2,dev3=/dev/sdr3",
        args: "{{.RfCard}}",
        /* TDD: force the RX antenna on the RX connector */
        rx_antenna: "rx",

        /* synchronisation source: none, internal, gps, external (default = none) */
        // sync: "gps",
  },
  tx_gain: [{{range $index, $element := .TxGain}}{{if $index}},{{end}}{{$element}}{{end}}],
  rx_gain: [{{range $index, $element := .RxGain}}{{if $index}},{{end}}{{$element}}{{end}}],

  amf_list: [{{range .AMFList}}
    {
      amf_addr: "{{.AMFAddr}}",
      {{- if ne .NgapBindAddr ""}} 
      ngap_bind_addr: "{{.NgapBindAddr}}",{{- end}}
    },
  {{- end}}
  ],

  gtp_addr: "{{.UDFAddr}}",
#ifdef GTP_U_BUNDLING
  gtp_use_packet_bundling: true,
#endif

  gnb_id_bits: 28,
  gnb_id: {{decimaltoHex .GnbID}},

  en_dc_support: true,

  /* list of cells */
  cell_list: [],

  nr_cell_list: [{{range $index, $cell := .Cells}}
    {{- if eq .CellType "5g"}}
    {
      rf_port: {{$index}},
      cell_id: {{decimaltoHex .CellID}},
      n_id_cell: {{.PCI}},
      {{if $.CarrierAggregation}}
      {{- if .ScellList}}
      scell_list:[{{- range $i, $v := .ScellList}}
        {cell_id: {{$v}}},
      {{- end}}
      ],
      {{- end -}}
      {{- else}}
      {{- if .NcellList}}
      ncell_list:[{{- range $i, $v := .NcellList}}
        {cell_id: {{$v}}},
      {{- end}}
      ],
      {{- end}}
      {{- end}}

      band: {{ extractNumeric .Band}},
      dl_nr_arfcn: {{.DLNRarfcn}},
      {{if eq .DuplexMode 0}}ul_nr_arfcn:{{.ULNRarfcn}},{{else}}ul_nr_arfcn:{{.DLNRarfcn}},{{end}}
      subcarrier_spacing: {{.SCS}},
      bandwidth: {{.Bandwidth}},
      n_antenna_dl: {{.AntennaDL}},
      n_antenna_ul: {{.AntennaUL}},
      
      plmn_list: [{{range .PLMNList5g}}
        {
          tac: {{.Tac}},
          plmn: [{{range $i, $v := .Plmn}}{{if $i}},{{end}}"{{ $v }}"{{end}}],
          reserved: {{.Reserved}},
        },
      {{- end}}
      ],
      {{if eq .DuplexMode 1}}
      tdd_ul_dl_config: {
        pattern1: {
          {{- if eq .TDDConfig 1}}
          period: 5, /* in ms */
          dl_slots: 7,
          dl_symbols: /* 6 */ 2,
          ul_slots: 2,
          ul_symbols: 0,
          {{- else if eq .TDDConfig 2}}
          period: 5, /* in ms */
          dl_slots: 7,
          dl_symbols: 6,
          ul_slots: 2,
          ul_symbols: 4,
          {{- else if eq .TDDConfig 3}}
          period: 5, /* in ms */
          dl_slots: 6,
          dl_symbols: 2,
          ul_slots: 3,
          ul_symbols: 0,
          {{- else if eq .TDDConfig 4}}
          period: 3, /* in ms */
          dl_slots: 3,
          dl_symbols: 6,
          ul_symbols: 4,
          ul_slots: 2,
        },
        pattern2: {
          period: 2, /* in ms */
          dl_slots: 4,
          dl_symbols: 0,
          ul_symbols: 0,
          ul_slots: 0,
        {{- end}}
        },
      },
      ssb_pos_bitmap: "10000000",
      {{- else}}
      ssb_pos_bitmap: "1000",
      {{- end}}

      prach: {
      {{- if eq .DuplexMode 1}}
      {{- if eq .TDDConfig 4}}
        prach_config_index: 156, /* format B4, subframe 2 */
      {{else}}
        prach_config_index: 160, /* format B4, subframe 9 */
      {{- end}}
        msg1_subcarrier_spacing: 30, /* kHz */
      {{- else}}
        prach_config_index: 16, /* subframe 1 every frame */
      {{- end}}
        msg1_fdm: 1,
        msg1_frequency_start: -1,
        zero_correlation_zone_config: 15,
        preamble_received_target_power: -110, /* in dBm */
        preamble_trans_max: 7,
        power_ramping_step: 4, /* in dB */
      {{- if eq .DuplexMode 1}}
        ra_response_window: 20, /* in slots */
      {{- else}}
        ra_response_window: 10, /* in slots */
      {{- end}}
        restricted_set_config: "unrestricted_set",
        ra_contention_resolution_timer: 64, /* in ms */
        ssb_per_prach_occasion: 1,
        cb_preambles_per_ssb: 8,
      },
    },
    {{- end -}}
    {{- end}}
  ],

  nr_cell_default: {
    /* force the timing TA offset (optional) */
//    n_timing_advance_offset: 39936,

    ssb_period: 20, /* in ms */

    /*sib_sched_list: [{{range .SIBList}}
      {
        filename: "{{.FileName}}",
        si_periodicity:{{.SiPeriodicity}},
      },
      {{end}}
    ],
    sib9: {
      si_periodicity: 32
    },*/
    si_window_length: 40,

    cell_barred: false,
    intra_freq_reselection: true,
    q_rx_lev_min: -70,
    q_qual_min: -20,
    //p_max: 10, /* dBm */

    root_sequence_index: 1, /* PRACH root sequence index */

    /* Scheduling request period (slots). */
    sr_period: 40,

    dmrs_type_a_pos: 2,

    /* to limit the number of HARQ feedback in UL, use pdsch_harq_ack_max;
       allows to workaround issues with SM-G977N for example */
    //pdsch_harq_ack_max: 2,

    pdcch: {
      n_rb_coreset0: 48,
      n_symb_coreset0: 1,
      search_space0_index: 0,

      rb_start: -1, /* -1 to have the maximum bandwidth */
      l_crb: -1, /* -1 means all the bandwidth */
      duration: 1,
      precoder_granularity: "sameAsREG_bundle",
      css: {
        n_candidates: [ 0, 0, 4, 0, 0 ],
      },
      rar_al_index: 2,
      si_al_index: 2,

      uss: {
        n_candidates: [ 0, 4, 0, 0, 0 ],
        dci_0_1_and_1_1: true,
      },
      al_index: 1,
    },

    pdsch: {
      mapping_type: "typeA",
      start_symb: 1,
      n_symb: 13,
      dmrs_add_pos: 1,
      dmrs_type: 1,
      dmrs_max_len: 1,
      /* k0 delay in slots from DCI to PDSCH: automatic setting */
      /* k1 delay in slots from PDSCH to PUCCH/PUSCH ACK/NACK: automatic setting */
      mcs_table: "{{.DLModulation}}",
      rar_mcs: 2,
      si_mcs: 6,
      /* If defined, force the PDSCH MCS for all UEs. Otherwise it is computed
       * based on DL channel quality estimation */
      /* mcs: 24, */
    },

    csi_rs: {
      resource_auto: {
        nzp_csi_rs_period: 80,
      },
      csi_report_config: [
        {
          report_config_type: "periodic",
          period: 80,
        },
      ],
    },
    
    pucch: {
      pucch_group_hopping: "neither",
      hopping_id: -1, /* -1 = n_cell_id */
      p0_nominal: -96,
#if 0
        pucch0: {
          initial_cyclic_shift: 1,
          n_symb: 1,
        },
#else
        pucch1: {
          n_cs: 3,
          n_occ: 3,
          freq_hopping: true,
        },
#endif
#if NR_LONG_PUCCH_FORMAT == 2
        pucch2: {
          n_symb: 2,
          n_prb: 1,
          freq_hopping: true,
          simultaneous_harq_ack_csi: false,
          max_code_rate: 0.25,
        },
#elif NR_LONG_PUCCH_FORMAT == 3
        pucch3: {
          bpsk: false,
          additional_dmrs: false,
          freq_hopping: true,
          n_prb: 1,
          simultaneous_harq_ack_csi: true,
          max_code_rate: 0.25,
        },
#elif NR_LONG_PUCCH_FORMAT == 4
        pucch4: {
          occ_len: 4,
          bpsk: false,
          additional_dmrs: false,
          freq_hopping: true,
          simultaneous_harq_ack_csi: true,
          max_code_rate: 0.25,
        },
#endif
    },

    pusch: {
      mapping_type: "typeA",
      n_symb: 14,
      dmrs_add_pos: 1,
      dmrs_type: 1,
      dmrs_max_len: 1,
      tf_precoding: false,
      mcs_table: "{{.ULModulation}}", /* without transform precoding */
      mcs_table_tp: "qam256", /* with transform precoding */
      ldpc_max_its: 5,
      /* k2, msg3_k2 delay in slots from DCI to PUSCH: automatic setting */
      p0_nominal_with_grant: -84,
      msg3_mcs: 4,
      msg3_delta_power: 0, /* in dB */
      beta_offset_ack_index: 9,

      /* hardcoded scheduling parameters */
      n_dmrs_cdm_groups: 1,
      n_layer: 1,
      /* if defined, force the PUSCH MCS for all UEs. Otherwise it is
       computed from the last received PUSCH. */
      /* mcs: 16, */
    },

    /* MAC configuration */
    mac_config: {
      msg3_max_harq_tx: 5,
      ul_max_harq_tx: 5, /* max number of HARQ transmissions for uplink */
      dl_max_harq_tx: 5, /* max number of HARQ transmissions for downlink */
      ul_max_consecutive_retx: 30, /* disconnect UE if reached */
      dl_max_consecutive_retx: 30, /* disconnect UE if reached */
      periodic_bsr_timer: 20,
      retx_bsr_timer: 320,
      periodic_phr_timer: 500,
      prohibit_phr_timer: 200,
      phr_tx_power_factor_change: "dB3",
      sr_prohibit_timer: 0, /* in ms, 0 to disable the timer */
      sr_trans_max: 64,
    },

    cipher_algo_pref: [],
    integ_algo_pref: [2, 1],

    inactivity_timer: 10000,

    drb_config: "drb_nr.cfg",
  },
}